const cron = require('node-cron');
const EmailService = require('../services/EmailService');

class EmailProcessor {
    
    // Kh·ªüi ƒë·ªông c√°c cron jobs
    static start() {
        console.log('üöÄ Kh·ªüi ƒë·ªông Email Processor...');
        
        // Ch·∫°y m·ªói ph√∫t ƒë·ªÉ x·ª≠ l√Ω pending emails
        cron.schedule('* * * * *', async () => {
            console.log('‚è∞ Ch·∫°y job x·ª≠ l√Ω pending emails...');
            try {
                await EmailService.processPendingEmails();
            } catch (error) {
                console.error('‚ùå L·ªói trong cron job:', error);
            }
        });
        
        // Ch·∫°y m·ªói gi·ªù ƒë·ªÉ cleanup old notifications (x√≥a d·ªØ li·ªáu c≈©)
        cron.schedule('0 * * * *', async () => {
            console.log('üßπ Ch·∫°y job cleanup d·ªØ li·ªáu c≈©...');
            try {
                await this.cleanupOldNotifications();
            } catch (error) {
                console.error('‚ùå L·ªói cleanup:', error);
            }
        });
        
        console.log('‚úÖ Email Processor ƒë√£ kh·ªüi ƒë·ªông!');
    }
    
    // X√≥a notification c≈© h∆°n 30 ng√†y
    static async cleanupOldNotifications() {
        const { pool } = require('../config/database');
        
        try {
            const query = `
                DELETE FROM notifications 
                WHERE created_at < DATE_SUB(NOW(), INTERVAL 30 DAY)
                AND status IN ('sent', 'failed')
            `;
            
            const [result] = await pool.execute(query);
            console.log(`üóëÔ∏è ƒê√£ x√≥a ${result.affectedRows} notification c≈©`);
            
        } catch (error) {
            console.error('‚ùå L·ªói cleanup old notifications:', error);
        }
    }
}

module.exports = EmailProcessor;